name: Build linux

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-22.04 #AppImage will run on more os than if build with "ubuntu-latest"
    steps:
    - name: üì¶5Ô∏è‚É£ install Qt5
      uses: jurplel/install-qt-action@v4
      with:
        #aqtversion: null # use whatever the default is
        dir: '${{ github.workspace }}/qt5'
        version: "5.15.2" 
        cache: true
        
    - name: üì¶6Ô∏è‚É£ install Qt6
      uses: jurplel/install-qt-action@v4
      with:
        #aqtversion: null # use whatever the default is
        modules: qtshadertools qtscxml
        dir: '${{ github.workspace }}/qt6'
        version: "6.7.3" 
        cache: true

    - name: üëÄ Fetch Gammaray sources(directly from kdab repo)
      uses: actions/checkout@v4
      with:
        repository: KDAB/GammaRay
        ref: v3.2.0
        path: ./src
        submodules: recursive
        
    - name: üíéInstall Dependencies on Linux
      run: |
        sudo apt update -qq
        sudo apt install -y gdb doxygen

    - name: üíéInstall ninja-build tool (must be after Qt due PATH changes)
      uses: turtlesec-no/get-ninja@main

    # this shouldnt be needed
    - name: üõ†Ô∏è Build GammaRay Qt5
      run: |
        mkdir build && cd build/
        cmake -G Ninja \
          -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install/ \
          -DCMAKE_PREFIX_PATH=${{ github.workspace }}/qt5 \
          -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=OFF \
          -DGAMMARAY_BUILD_DOCS=true \
          -DQT_VERSION_MAJOR=5 \
          ../src/
        cmake --build .
        cmake --build . --target install 
        
    - name: üõ†Ô∏è Build GammaRay
      run: |
        mkdir build && cd build/
        cmake -G Ninja \
          -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install/ \
          -DCMAKE_PREFIX_PATH=${{ github.workspace }}/qt6 \
          -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=OFF \
          -DGAMMARAY_BUILD_DOCS=true \
          -DQT_VERSION_MAJOR=6 \
          ../src/
        cmake --build .
        cmake --build . --target install 
        
    - name: üõ†Ô∏è Build probe
      run: |
        cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install/ \
        -DCMAKE_PREFIX_PATH=${{ github.workspace }}/qt5 \
        -DGAMMARAY_PROBE_ONLY_BUILD=true \
        -DQT_VERSION_MAJOR=5 \
        -DGAMMARAY_BUILD_UI=false  \
        ${{ github.workspace }}/src/
 
    - name: üêßCreate AppImage
      run: |      
        mkdir -p ${{ github.workspace }}/appDir/usr/
        mv ${{ github.workspace }}/install/* ${{ github.workspace }}/appDir/usr/
        wget --no-verbose "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
        wget --no-verbose "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
        chmod +x linuxdeploy*.AppImage
        export OUTPUT=${{ github.workspace }}/gammarayv3.2.0.AppImage
        ./linuxdeploy-x86_64.AppImage --appdir ${{ github.workspace }}/appDir --plugin qt
        ./linuxdeploy-x86_64.AppImage --appdir ${{ github.workspace }}/appDir --output appimage

    - name: üíéUpload Gammaray.AppImage
      uses: actions/upload-artifact@v4
      with:
        name: gammarayv3.2.0.AppImage
        path: ${{ github.workspace }}/gammarayv3.2.0.AppImage
        
    
