name: Build linux

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
        
    steps:
    
    - name: install Qt5
      uses: jurplel/install-qt-action@v4
      with:
        #aqtversion: null # use whatever the default is
        dir: '${{ github.workspace }}/qt5'
        version: "5.15.2" 
        cache: true
        
    - name: install Qt6
      uses: jurplel/install-qt-action@v4
      with:
        #aqtversion: null # use whatever the default is
        modules: qtshadertools qtscxml
        dir: '${{ github.workspace }}/qt6'
        version: "6.7.3" 
        cache: true

    
    - name: Fetch Gammaray sources
      uses: actions/checkout@v4
      with:
        path: ./src
        submodules: recursive
        
    - name: Install Dependencies on Linux
      run: |
        sudo apt update -qq
        sudo apt install -y gdb doxygen

    
    - name: Install ninja-build tool (must be after Qt due PATH changes)
      uses: turtlesec-no/get-ninja@main

    - name: Build GammaRay
      run: |
      
        mkdir build && cd build/
        cmake -G Ninja -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install/ -DCMAKE_PREFIX_PATH=${{ github.workspace }}/qt6/gcc_64 ../src/
        cmake --build .
        cmake --build . --target install 
        #cmake -G Ninja -DCMAKE_INSTALL_PREFIX='${{ github.workspace }}/install' -DCMAKE_PREFIX_PATH=${{ github.workspace }}/qt6/gcc_64 ../src/
        
        
    - name: Build probe
      run: |
        cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_PREFIX_PATH=${{ github.workspace }}/qt5/gcc_64 \
        -DGAMMARAY_PROBE_ONLY_BUILD=true \
        -DGAMMARAY_BUILD_UI=false  \
        -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install/ \
        ${{ github.workspace }}/src/

    - name: Create AppImage
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/latest/download/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy*.AppImage
        ./linuxdeploy-x86_64.AppImage --appdir ${{ github.workspace }}/install --plugin qt --output appimage
        mv *.AppImage ${{ github.workspace }}/gammaray3-2.AppImage

    #wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage

        
    # Create release and upload AppImage
    - name: Create and Upload Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ github.workspace }}/gammaray3-2.AppImage
        name: Gammaray 3.2
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # Package into .AppImage
    #- name: Create AppImage
    #  id: appimage
    #  uses: Kidev/qt-appimage@v1
    #  with:
    #    install_folder: '/home/runner/work/GammaRay/GammaRay/install'

      # Extract version from the commit tag
    #- name: Get Version
    #  id: get_version
    #  run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    # Create release and upload AppImage
    #- name: Create and Upload Release
    #  uses: softprops/action-gh-release@v2
    #  with:
    #    files: ${{ steps.appimage.outputs.appimage }}
    #    name: Gammaray ${{ steps.get_version.outputs.VERSION }}
    #    draft: false
    #    prerelease: false
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          

          
     
